
AngularJS version 1.0 was released in 2012.
Miško Hevery, a Google employee, started to work with AngularJS in 2009.
The idea turned out very well, and the project is now officially supported by Google.

AngularJS is a JavaScript framework. It can be added to an HTML page with a <script> tag.
AngularJS extends HTML attributes with Directives, and binds data to HTML with Expressions.

AngularJS extends HTML with ng-directives.
The ng-app directive defines an AngularJS application.
The ng-model directive binds the value of HTML controls (input, select, textarea) to application data. 
The ng-bind directive binds application data to the HTML view.<!--  -->

AngularJS Applications :
*AngularJS modules define AngularJS applications. (designate, repérer)
*AngularJS controllers control AngularJS applications.
*The ng-app directive defines the application, the ng-controller directive defines the controller.

AngularJS Expressions :

*AngularJS expressions can be written inside double braces: {{ expression }}.
*AngularJS expressions can also be written inside a directive: ng-bind="expression".
*AngularJS will resolve the expression, and return the result exactly where the expression is written.
*AngularJS expressions are much like JavaScript expressions: They can contain literals, operators, and variables.
Example {{ 5 + 5 }} or {{ firstName + " " + lastName }}
*You can write expressions wherever you like, AngularJS will simply resolve the expression and return the result.
*Like JavaScript expressions, AngularJS expressions can contain literals, operators, and variables.
*Unlike JavaScript expressions, AngularJS expressions can be written inside HTML.
*AngularJS expressions do not support conditionals, loops, and exceptions, while JavaScript expressions do.
*AngularJS expressions support filters, while JavaScript expressions do not.

AngularJS Modules:

*An AngularJS module defines an application. The module is a container for the different parts of an application.
*The module is a container for the application controllers.
*Controllers always belong to a module.

Directives :

*AngularJS lets you extend HTML with new attributes called Directives.
*AngularJS has a set of built-in directives which you can 
use to add functionality to your application. But, you can use the module to add your own directives to your applications
*AngularJS directives are extended HTML attributes with the prefix ng-
*The ng-app directive initializes an AngularJS application. The ng-app directive also tells AngularJS that the <div> element is the "owner" of the AngularJS application.
*The ng-app directive defines the root element of an AngularJS application.
*The ng-app directive will auto-bootstrap (automatically initialize) the application when a web page is loaded.
*The ng-init directive initializes application data.
*The ng-model directive binds the value of HTML controls (input, select, textarea) to application data.
*The ng-model directive can provide status for application data (invalid, dirty, touched, error)

-While it is common in HTML applications to place scripts at the end of the <body> element, 
it is recommended that you load the AngularJS library either in the <head> or at the start of the <body>. This is because calls to angular.module can only be compiled after the library has been loaded.