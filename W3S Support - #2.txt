
Data Binding : 

*Data binding in AngularJS is the synchronization between the model and the view.
*AngularJS applications usually have a data model. The data model is a collection of data available for the application.
*The HTML container where the AngularJS application is displayed, is called the view.
*The view has access to the model, and there are several ways of displaying model data in the view.
  -You can use the ng-bind directive, which will bind the innerHTML of the element to the specified model property: <p ng-bind="firstname"></p>
  -You can also use double braces {{ }} to display content from the model: <p>First name: {{firstname}}</p>
  Or you can use the ng-model directive on HTML controls to bind the model to the view.
*Use the ng-model directive to bind data from the model to the view on HTML controls (input, select, textarea) : <input ng-model="firstname">
*The ng-model directive provides a two-way binding between the model and the view.
*
*
*
*
*
*

Angular JS Controller :

*AngularJS controllers control the data of AngularJS applications. AngularJS controllers are regular JavaScript Objects.
*The ng-controller directive defines the application controller.
*A controller is a "JavaScript Object", created by a standard JavaScript "object constructor".
*
*
AngularJS Scope :

*The scope is the binding part between the HTML (view) and the JavaScript (controller).
*The scope is an object with the available properties and methods.
*The scope is available for both the view and the controller.
*When you make a controller in AngularJS, you pass the $scope object as an argument
*The scope is a JavaScript object with properties and methods, which are available for both the view and the controller.
*It is important to know which scope you are dealing with, at any time.
*All applications have a $rootScope which is the scope created on the HTML element that contains the ng-app directive
*The rootScope is available in the entire application.
*If a variable has the same name in both the current scope and in the rootScope, the application uses the one in the current scope.


AngularJS Filters :

*AngularJS provides filters to transform data: 
 - currency Format a number to a currency format.
 - date Format a date to a specified format.
 - filter Select a subset of items from an array.
 - json Format an object to a JSON string.
 - limitTo Limits an array/string, into a specified number of elements/characters.
 - lowercase Format a string to lower case.
 - number Format a number to a string.
 - orderBy Orders an array by an expression.
 - uppercase Format a string to upper case.
 
*Filters can be added to expressions by using the pipe character |, followed by a filter.
*Filters are added to directives, like ng-repeat, by using the pipe character |, followed by a filter
*The 'filter' filter can only be used on arrays, and it returns an array containing only the matching items.
*You can make your own filters by registering a new filter factory function with your module







